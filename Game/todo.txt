
[TODO after v1.0]
-PlayPanel.java paintComponent
     -Put getHeight/world.rows and getWidth/world.columns calculations in
     constructor for GameObject as they are always the same to do the alignment
     -Eventually create an ArrayList of GameObjects that stores all the objects
     of the game (Enemies, Explosions, Bullets, etc..) and is used in a for loop
     to draw all of these stored objects using the 4 alignment methods of
     GameObject, which will elimiate all of the repeated code used to draw the
     various objects of the game
-Make it so that doing rm *.class and javac *.java works without producing a
bunch of errors
-Fix bug: can go to main menu and "Get Question" and answer incorrectly several
times and get game over screen when not actually playing the game
-what are the differences between instructions.txt and howToPlay.txt?
      -get rid of instructions.txt
-CorrectAnswerPanel and IncorrectAnswerPanel are almost exactly the same
      -Creat GameObject like class?

[DOING]:

[DONE - original todo.txt file]:
**establish consistency with names for Main/Start menu**
Then you're sent back to the game from AnswerScreen.
-If you get 2 errors, the game ends
-In/Correct Answer screens with buttons leading back to game
-Play button to start playing game
-Control a white blood cell
-Shoot at germs with bullets
-Draw explosions when enemies have been hit
-If they get past you, you will be prompted with a
question that you must answer. Then you informed whether
you're in/correct.
-Title
-Start out at title screen
-Four main button to navigate through program
-Added JPanels (blank) that will contain stuff for program
-Fill in How To Play Screen
-Put immune system facts on immune systen screen
-Background, rapidly moving
-Question panels, make a bunch of cards from questions
-use arrays EVERYWHERE [DONE]
-unify methods for keeping track of BufferedImages [DONE]
-remove single BufferedImage argument from GameObject class [DONE]
-remove excessive indentation
-classes in 'wbcGamePanel' need to be unnested
-edit germs.gif so purple/orange/black germs are next to eachother
-replace magic numbers with constants
-give variables (cg, sa, mg) more descriptive names or remove them
-split code into seperate files
-edit variable 'counter' (772)
-bounds should go from 0 to n-1
-rename 'objectExplosion/Bullets/Cells' ArrayLists
-rename drawing (pics of user) to something more "meaningful"
-find a way to remove 'whenToDrawBullets'
-keep BufferedImage names consistent (image vs img)
-edit 'for loop' boundaries and step sizes
-remove 'cells' ArrayList
-change the listener classes later so they're not nested
-improve parameters in TitlePanel class
-too many arguments
-learn what the heck "implement and extend" mean
-figure out 'CreateGerm, MoveGerm' dependency cycle (ex: on timers)
-dont use 'mistakesMade' (increment it) in paintComponent
-Change int to ArrayList<Integer> (questionPicker, mistakesMade) and get them to run
-do same with booleans
-Read in files containing answers/questions and create data structures to pass to classes which specifically handle those things (correct answers and incorrect answers
-Bunch of errors when clicking correct JRadioButton
-variable ii might be used too much
-Fix reliance of questionAndAnswers on CorrectAnswerScreen
-JRadioButton shows result when clicked (correct/incorrect) by informing the ScreenHolder that it needs to display a certain correct/incorrect answer
-Answer is displaying oddly on JTextArea (single line of text)
-Complete Correct/IncorrectAnswerPanel classes
-Reset selection of JRadioButton after finding out correct answer
-Use keyboard keys to move user left and right
-'a' move left
-'d' move right
-Place enemy on board
-Move getX/YPixel methods into view from Player class
-draw enemies and bullets so that they can overlap when at same position
-Fix problem with backgroundHeight/Width variables in gridToPixelX/Y
-Draws user and enemy in top left corner of screen
-Fix overlap of enemies on eachother
-Move to question screen when enemy is on user/off screen
-Move enemies back a few spaces at the same time
-Have generic method to check/react to move player/enemy/bullet makes
-World variable for GameOjects?
-Move enemies back when they hit player (not just after leaving screen)
-Pause game when key 'P' is clicked - show JButton to exit game
-Use Boolean to know if game should be paused or unpaused
-Reset lists/variables in World after game is finished
-Finish JLayeredPane for pausign game
-Create demo class with bare minimum requirement for JLayeredPane to practice/learn how to use it
-Handle in/correct answers in ScreenHolder (controller)
-Handle number of errors in ScreenHolder (controller)
-have jbuttons that allow navigation when game is paused
-to main menu and to exit game
-Make the PausePanel only show up when game is paused
-Currently visible at all times
-Animations
-player
-fix: only animates when moved with keyboard
-explosions
-enemies
-"Dancing" as they move down (flipping between 4 pics)
-Don't create enemies when not on play screen
-Move down the screen
-bullets
-"Dancing" as they move up (flipping between 4 pics)
-Move up the screen
-timers
-Stop relevant timers when 'P' is pressed (pause)
-Stop revelant timers when certain # of enemies leave screen
-make explosions animate faster
-enemies
-Spawn enemies less often
-background
-Checkerboard colors keep switching
-PausePanel problems
-Returning to MainMenu and then Play Screen unpauses timers but PausePanel remains
-Create more "deterministic"- rather than probabilistic - method to add enemies
-While game is paused, enemies continue spawning (fix so they dont)
-Create a stacktrace when exceptions are thrown (Scanners)
-Maybe display number of errors made by user
-Don't use System.exit(0) when quitting game
-Use controller to find frame and then quit?
-remove white lines on main menu that divide screen
-Change names from "-Screen" to "-Panel"
-Break apart code into different files
-Go back to play screen from answer screen
-Randomize answer choices so first option isn't always correct
-Fix magic numbers and replace them with named constants?!?!
-do something about similiarity between bullet/player/explosion/enemy classes
    -frameIndexIncrementCount
    -Review descendents of GameObject
-Add constants to the World
-Rows/Columns
-Combine handleCollisons and handleEnemiesOffScreen
-move user is less steps of code
-Creating a minimum viable test (SSCCE) to determine why Player is off screen for danny
-things needed to create error:
        -window (jframe), player bufferedimage, position at bottom left corner
Fix player position as it is currently half way off screen (for daniel)
     -Player.java
        -Looked at every animation frames so that they looked the same
     -PlayPanel.java
        -Checked getWidth(), getHeight(), world.rows, world.columns, 
                 playah.x, and playah.y
                 -Checked gridToPixelX() and gridToPixelY()
-Fix placement of user which is currently slightly off the PlayPanel
-Fix user movement wrapping around when moving off screen
-Fix?: World depends on Player and Player depends on World
       -Only have one columns variable throughout code
NOTE: PlayBase is using a width and height of zero due to using mainFrame's
      getHeight and getWidth methods.
 -Fixing error when PlayPanel is not drawn when setPreferredSize and pack are 
 used, however the size of the Frame/ContentPane is correct
        -Adding to SSCCE to mirror ControllerPanel to find which Panel is 
        causing the error of the PlayPanel not being drawn
        -Works fine (PlayScreen drawn and size is correct) when setBounds,
        setPreferredSize, and pack are used but you should be able to do 
        that with only setPreferredSize and pack 
-Find out why Enemy animation will not run using GameObject updateFrame method
      -Only works with its own updateFrame method unlike Bullet & Player
-Move getImage() methods into GameObject from Player/Bullet/Explosion/Enemy
-Add smaller pane to PlayPanel where Enemy will actually be drawn. This is
   to create a border so that the inversion variables of PlayPanel are no 
   longer needed
-Introduced more magic numbers in Playbase when adding playpanel
   -Remove magic numbers in creating border 
-Adding an EmptyBorder to borderPanel and then adding playPanel to it
        -Trying to fix problems with showing pausepanel and order of layers
-Give borderpanel background and remove/make transparent background on 
playpanel
-Make BorderPanel its own class and use it in PlayBase
      -Right now it's at the bottom of PlayPanel.java
-GridToPixelX needs to be fixed as the left hand side of PlayPanel takes up
more space than the right hand side
-Alter drawing of enemy, explosion, player, and bullet so that they don't need
constants added to their x values ("inversions")
          -Use the height/width of the columns and rows to determine where to
          to draw so everything is center alligned
-Fix allignment of images so that the right border is not larger than the left
border
        -The enemies are being drawn too close to the left border; the panel
        itself is centered perfectly
-Move alignment calculations into GameObject
-Doing calculations on what values to add to x and y pixel to fix center
allignment
-Move inversions of Enemy, Explosion, and Bullet out of PlayPanel
   -PlayPanel has many constants than can be updated
-Going through every file to see if there are constants that should be moved
to World
   -Got through QuestionPanel.java from bottom-up and PlayButton from top-down
-Try to center align the images so the right hand border isn't larger than
the left border
-Delete PlayPanel in ControllerPanel because it's created in PlayBase
-Add constants to world object
     -Got to ImmuneSystemPanel when looking for constants to replace
-Don't add PausePanel to both PlayBase and directly to ControllerPanel
-Make another .txt file with short versions of answers for JRadioButton
-Create class that ImmuneSystemPanel/HowToPlayPanel will extend
        -Sort of like GameObject
-Use some LayoutManager to place panels instead random x/y/width/height values